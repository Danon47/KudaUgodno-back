# Generated by Django 5.2.3 on 2025-06-30 14:28

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название отеля', max_length=100, verbose_name='Название отеля')),
                ('star_category', models.IntegerField(blank=True, help_text='Выберите категорию отеля (от 0 до 5)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Категория отеля')),
                ('place', models.CharField(blank=True, choices=[('Отель', 'Отель'), ('Хостел', 'Хостел'), ('Вилла', 'Вилла'), ('Апартаменты', 'Апартаменты'), ('Гостевой дом', 'Гостевой дом'), ('Гостиница', 'Гостиница')], default='Отель', help_text='Тип размещения', max_length=100, null=True, verbose_name='Тип размещения')),
                ('country', models.CharField(blank=True, help_text='Страна', max_length=50, null=True, verbose_name='Страна')),
                ('city', models.CharField(blank=True, help_text='Город', max_length=100, null=True, verbose_name='Город')),
                ('address', models.CharField(blank=True, help_text='Адрес отеля', max_length=100, null=True, verbose_name='Адрес отеля')),
                ('distance_to_the_station', models.IntegerField(blank=True, help_text='Введите расстояние до вокзала в метрах', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200000)], verbose_name='Расстояние до вокзала')),
                ('distance_to_the_sea', models.IntegerField(blank=True, help_text='Введите расстояние до моря в метрах', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200000)], verbose_name='Расстояние до моря')),
                ('distance_to_the_center', models.IntegerField(blank=True, help_text='Введите расстояние до центра в метрах', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200000)], verbose_name='Расстояние до центра')),
                ('distance_to_the_metro', models.IntegerField(blank=True, help_text='Введите расстояние до метро в метрах', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200000)], verbose_name='Расстояние до метро')),
                ('distance_to_the_airport', models.IntegerField(blank=True, help_text='Введите расстояние до аэропорта в метрах', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200000)], verbose_name='Расстояние до аэропорта')),
                ('description', models.TextField(blank=True, help_text='Описание отеля', null=True, verbose_name='Описание отеля')),
                ('check_in_time', models.TimeField(blank=True, help_text='Время заселения', null=True, verbose_name='Время заселения')),
                ('check_out_time', models.TimeField(blank=True, help_text='Время выезда', null=True, verbose_name='Время выезда')),
                ('amenities_common', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Общие', null=True, size=None, verbose_name='Общие')),
                ('amenities_in_the_room', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='В номере', null=True, size=None, verbose_name='В номере')),
                ('amenities_sports_and_recreation', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Спорт и отдых', null=True, size=None, verbose_name='Спорт и отдых')),
                ('amenities_for_children', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Для детей', null=True, size=None, verbose_name='Для детей')),
                ('user_rating', models.FloatField(blank=True, default=0.0, help_text='Пользовательская оценка', null=True, verbose_name='Пользовательская оценка')),
                ('type_of_rest', models.CharField(blank=True, choices=[('Пляжный', 'Пляжный'), ('Городской', 'Городской'), ('Спа', 'Спа'), ('Лечебный', 'Лечебный'), ('С детьми', 'С детьми'), ('С животными', 'С животными')], default='Пляжный', help_text='Тип отдыха', max_length=15, null=True, verbose_name='Тип отдыха')),
                ('is_active', models.BooleanField(default=False, help_text='Отель работает?', verbose_name='Отель работает?')),
                ('width', models.FloatField(blank=True, help_text='Широта (от -90 до 90)', null=True, validators=[django.core.validators.MinValueValidator(Decimal('-90.0')), django.core.validators.MaxValueValidator(Decimal('90.0'))], verbose_name='Широта')),
                ('longitude', models.FloatField(blank=True, help_text='Долгота (от -180 до 180)', null=True, validators=[django.core.validators.MinValueValidator(Decimal('-180.0')), django.core.validators.MaxValueValidator(Decimal('180.0'))], verbose_name='Долгота')),
            ],
            options={
                'verbose_name': 'Отель',
                'verbose_name_plural': 'Отели',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='HotelPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, help_text='Фотография отеля', upload_to='hotels/hotels/', verbose_name='Фотография отеля')),
                ('hotel', models.ForeignKey(blank=True, help_text='Отель', on_delete=django.db.models.deletion.CASCADE, related_name='hotel_photos', to='hotels.hotel', verbose_name='Отель')),
            ],
            options={
                'verbose_name': 'Фотография отеля',
                'verbose_name_plural': 'Фотографии отеля',
            },
        ),
        migrations.CreateModel(
            name='HotelRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Правила в отеле', max_length=100, null=True, verbose_name='Правила в отеле')),
                ('description', models.TextField(blank=True, help_text='Описание правил', null=True, verbose_name='Описание правил')),
                ('hotel', models.ForeignKey(blank=True, help_text='Отель', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hotels_rules', to='hotels.hotel', verbose_name='Отель')),
            ],
            options={
                'verbose_name': 'Правило в отеле',
                'verbose_name_plural': 'Правила в отеле',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='hotel',
            name='rules',
            field=models.ManyToManyField(blank=True, help_text='Правила в отеле', related_name='hotels_rules', to='hotels.hotelrules', verbose_name='Правила в отеле'),
        ),
        migrations.CreateModel(
            name='HotelWhatAbout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_set', models.CharField(choices=[('Что насчёт поисследовать улочки в Италии', 'Что насчёт поисследовать улочки в Италии'), ('Что насчёт на все выходные в Санкт-Петербурге', 'Что насчёт на все выходные в Санкт-Петербурге'), ('Что насчёт исследовать китайскую культуру в Шанхае', 'Что насчёт исследовать китайскую культуру в Шанхае'), ('Что насчёт расслабиться на островах Таиланда', 'Что насчёт расслабиться на островах Таиланда'), ('Что насчёт погреться в Турции', 'Что насчёт погреться в Турции')], default='', help_text='Выберите название подборки', max_length=100, verbose_name='Название подборки')),
                ('hotel', models.ManyToManyField(help_text='Выберите отель', related_name='what_about_hotels', to='hotels.hotel', verbose_name='Отель')),
            ],
            options={
                'verbose_name': 'Подборка что насчёт...',
                'verbose_name_plural': 'Подборки что на счёт...',
            },
        ),
        migrations.CreateModel(
            name='TypeOfMeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Без питания', 'Без питания'), ('Завтрак', 'Завтрак'), ('Завтрак и ужин', 'Завтрак и ужин'), ('Полный пансион', 'Полный пансион'), ('All inclusive', 'All inclusive'), ('Ultra all inclusive', 'Ultra all inclusive')], default='Завтрак', help_text='Выберите тип питания', max_length=100, verbose_name='Выберите типа питания')),
                ('price', models.DecimalField(decimal_places=2, help_text='Введите стоимость типа питания', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('500000.00'))], verbose_name='Стоимость типа питания')),
                ('hotel', models.ForeignKey(blank=True, help_text='Отель, к которому добавляются типы питания', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='type_of_meals', to='hotels.hotel', verbose_name='Отель')),
            ],
            options={
                'verbose_name': 'Тип питания',
                'verbose_name_plural': 'Типы питания',
                'constraints': [models.UniqueConstraint(fields=('hotel', 'name'), name='unique_type_of_meal_in_hotel')],
            },
        ),
    ]
