services:
  db:
    container_name: kuda_ugodno_backend_db
    image: postgres:17.6
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
#      - ${POSTGRES_VOLUME_PATH}/postgres:/var/lib/postgresql/data
#      - ${POSTGRES_VOLUME_PATH}/logs:/var/log/postgresql
      - ku_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB' ]
      interval: 5s
      retries: 5
      timeout: 10s
    networks:
      - 36_kuda_ugodno_backend

  app:
    container_name: kuda_ugodno_backend_api
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    ports:
      - "${GUNICORN_PORT}:${GUNICORN_PORT}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app:cached
      - static_data:/app/static
      - ./media:/app/static/media
#      - ${APP_VOLUME_PATH}:/app/static
    env_file:
      - .env
    networks:
#      - default
      - 36_kuda_ugodno_backend

  redis:
    container_name: kuda_ugodno_backend_redis
    image: redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - 36_kuda_ugodno_backend

  celery_worker:
    container_name: kuda_ugodno_backend_celery_worker
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - SERVICE_TYPE=celery_worker
    restart: unless-stopped
    networks:
      - 36_kuda_ugodno_backend

  celery_beat:
    container_name: kuda_ugodno_backend_celery_beat
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - SERVICE_TYPE=celery_beat
    restart: unless-stopped
    networks:
      - 36_kuda_ugodno_backend

  flower:
    container_name: kuda_ugodno_backend_flower
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    ports:
      - "${CELERY_FLOWER_PORT}:${CELERY_FLOWER_PORT}"
    depends_on:
      - redis
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - SERVICE_TYPE=flower
    restart: unless-stopped
    networks:
      - 36_kuda_ugodno_backend

  nginx:
    image: nginx:latest
    container_name: kuda_ugodno_backend_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    depends_on:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - static_data:/app/static
    networks:
      - 36_kuda_ugodno_backend

networks:
#  default:
#    name: nginx_network
#    external: True
  36_kuda_ugodno_backend:
    name: 36_kuda_ugodno_backend

volumes:
  ku_data:
  static_data:
  redis_data: